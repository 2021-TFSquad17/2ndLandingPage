{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelil\\\\OneDrive\\\\Documentos\\\\GitHub\\\\2ndLandingPage\\\\project\\\\src\\\\components\\\\Contact\\\\FormContact\\\\FormContact.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport \"./style.css\";\nimport ValidationsForm from \"../../../contexts/ValidationsForm\";\nimport useErros from \"../../../hooks/useErros\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormContact() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const validations = useContext(ValidationsForm);\n  const [erros, validateFields, canSendForm] = useErros(validations);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-contact\",\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (canSendForm()) {\n        console.log({\n          name,\n          email,\n          telephone,\n          message\n        });\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: name,\n      onChange: event => {\n        setName(event.target.value);\n      },\n      onBlur: event => {\n        validateFields(event);\n      },\n      name: \"name\",\n      className: \"normal-input\",\n      type: \"text\",\n      label: \"Nome*\",\n      variant: \"filled\",\n      color: \"secondary\",\n      fullWidth: true,\n      margin: \"normal\",\n      error: !erros.name.valid,\n      helperText: erros.name.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: email,\n      onChange: event => {\n        setEmail(event.target.value);\n      },\n      onBlur: event => {\n        validateFields(event);\n      },\n      name: \"email\",\n      className: \"normal-input\",\n      type: \"email\",\n      label: \"Email*\",\n      variant: \"filled\",\n      color: \"secondary\",\n      fullWidth: true,\n      margin: \"normal\",\n      error: !erros.email.valid,\n      helperText: erros.email.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: telephone,\n      onChange: event => {\n        setTelephone(event.target.value);\n      },\n      onBlur: event => {\n        validateFields(event);\n      },\n      name: \"telephone\",\n      className: \"normal-input\",\n      type: \"number\",\n      label: \"Telefone\",\n      variant: \"filled\",\n      color: \"secondary\",\n      fullWidth: true,\n      margin: \"normal\",\n      error: !erros.telephone.valid,\n      helperText: erros.telephone.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: message,\n      onChange: event => {\n        setMessage(event.target.value);\n      },\n      onBlur: event => {\n        validateFields(event);\n      },\n      name: \"message\",\n      className: \"normal-input\",\n      type: \"text\",\n      label: \"Mensagem*\",\n      variant: \"filled\",\n      color: \"secondary\",\n      fullWidth: true,\n      multiline: true,\n      rows: \"4\",\n      margin: \"normal\",\n      error: !erros.message.valid,\n      helperText: erros.message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"large\",\n      color: \"secondary\",\n      variant: \"contained\",\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormContact, \"fp5LMms05iUTlzG1OkkJiKP10sw=\", false, function () {\n  return [useErros];\n});\n\n_c = FormContact;\nexport default FormContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContact\");","map":{"version":3,"sources":["C:/Users/nelil/OneDrive/Documentos/GitHub/2ndLandingPage/project/src/components/Contact/FormContact/FormContact.jsx"],"names":["useContext","useState","TextField","Button","ValidationsForm","useErros","FormContact","name","setName","email","setEmail","telephone","setTelephone","message","setMessage","validations","erros","validateFields","canSendForm","event","preventDefault","console","log","target","value","valid","text"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport ValidationsForm from \"../../../contexts/ValidationsForm\";\r\nimport useErros from \"../../../hooks/useErros\";\r\n\r\nfunction FormContact() {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [telephone, setTelephone] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const validations = useContext(ValidationsForm);\r\n    const [erros, validateFields, canSendForm] = useErros(validations);\r\n\r\n    return (\r\n        <form className=\"form-contact\" onSubmit={(event) => {\r\n            event.preventDefault();\r\n            if (canSendForm()) {\r\n                console.log({ name, email, telephone, message });\r\n            }\r\n        }}>\r\n            <TextField\r\n                value={name}\r\n                onChange={(event) => {\r\n                    setName(event.target.value);\r\n                }}\r\n                onBlur={(event) => {\r\n                    validateFields(event);\r\n                }}\r\n                name=\"name\"\r\n                className=\"normal-input\"\r\n                type=\"text\"\r\n                label=\"Nome*\"\r\n                variant=\"filled\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!erros.name.valid}\r\n                helperText={erros.name.text}\r\n            />\r\n\r\n            <TextField\r\n                value={email}\r\n                onChange={(event) => {\r\n                    setEmail(event.target.value);\r\n                }}\r\n                onBlur={(event) => {\r\n                    validateFields(event);\r\n                }}\r\n                name=\"email\"\r\n                className=\"normal-input\"\r\n                type=\"email\"\r\n                label=\"Email*\"\r\n                variant=\"filled\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!erros.email.valid}\r\n                helperText={erros.email.text}\r\n            />\r\n\r\n            <TextField\r\n                value={telephone}\r\n                onChange={(event) => {\r\n                    setTelephone(event.target.value);\r\n                }}\r\n                onBlur={(event)=>{\r\n                    validateFields(event);\r\n                }}\r\n                name=\"telephone\"\r\n                className=\"normal-input\"\r\n                type=\"number\"\r\n                label=\"Telefone\"\r\n                variant=\"filled\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!erros.telephone.valid}\r\n                helperText={erros.telephone.text}\r\n            />\r\n\r\n            <TextField\r\n                value={message}\r\n                onChange={(event) => {\r\n                    setMessage(event.target.value);\r\n                }}\r\n                onBlur={(event) => {\r\n                    validateFields(event);\r\n                }}\r\n                name=\"message\"\r\n                className=\"normal-input\"\r\n                type=\"text\"\r\n                label=\"Mensagem*\"\r\n                variant=\"filled\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                multiline\r\n                rows=\"4\"\r\n                margin=\"normal\"\r\n                error={!erros.message.valid}\r\n                helperText={erros.message.text}\r\n            />\r\n\r\n            <Button\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n            >\r\n                Enviar\r\n            </Button>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FormContact;"]},"metadata":{},"sourceType":"module"}